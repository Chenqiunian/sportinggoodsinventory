<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Demo.Mapper.GoodsMapper" >
  <resultMap id="BaseResultMap" type="Demo.Entity.Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="inventory" property="inventory" jdbcType="INTEGER" />
    <result column="lack" property="lack" jdbcType="INTEGER" />
    <result column="supplier" property="supplier" jdbcType="VARCHAR" />
    <result column="details" property="details" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <collection property="goodsList" ofType="Demo.Entity.Goods">
      <id column="id" property="id" javaType="int" />
      <result column="image" property="image" javaType="String" />
      <result column="name" property="name" javaType="String" />
      <result column="price" property="price" javaType="double" />
      <result column="inventory" property="inventory" javaType="int" />
      <result column="lack" property="lack" javaType="int" />
      <result column="supplier" property="supplier" javaType="String" />
      <result column="details" property="details" javaType="String" />
      <result column="state" property="state" javaType="String" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, image, name, price, inventory, lack, supplier, details
  </sql>
  <!--自己写-->
  <select id="selectAll" resultMap="BaseResultMap">
    select * from goods
  </select>
  <select id="selectByNameAndSupplier" resultMap="BaseResultMap">
    select * from goods where name = #{name} and supplier = #{supplier}
  </select>
  <update id="setGoodsState">
    update goods set state = #{state} where id in <foreach collection="ids" item="id" separator="," open="(" close=")">#{id}</foreach>
  </update>
  <!--自己写-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Demo.Entity.Goods" >
    insert into goods (id, image, name, 
      price, inventory, lack, 
      supplier, details,state)
    values (#{id,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{inventory,jdbcType=INTEGER}, #{lack,jdbcType=INTEGER}, 
      #{supplier,jdbcType=VARCHAR}, #{details,jdbcType=VARCHAR},#{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="Demo.Entity.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="inventory != null" >
        inventory,
      </if>
      <if test="lack != null" >
        lack,
      </if>
      <if test="supplier != null" >
        supplier,
      </if>
      <if test="details != null" >
        details,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="inventory != null" >
        #{inventory,jdbcType=INTEGER},
      </if>
      <if test="lack != null" >
        #{lack,jdbcType=INTEGER},
      </if>
      <if test="supplier != null" >
        #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="details != null" >
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Demo.Entity.Goods" >
    update goods
    <set >
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="inventory != null" >
        inventory = #{inventory,jdbcType=INTEGER},
      </if>
      <if test="lack != null" >
        lack = #{lack,jdbcType=INTEGER},
      </if>
      <if test="supplier != null" >
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="details != null" >
        details = #{details,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Demo.Entity.Goods" >
    update goods
    set image = #{image,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      inventory = #{inventory,jdbcType=INTEGER},
      lack = #{lack,jdbcType=INTEGER},
      supplier = #{supplier,jdbcType=VARCHAR},
      details = #{details,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>